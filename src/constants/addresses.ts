import { Networks } from "./blockchain";

const AVAX_MAINNET = {
    DAO_ADDRESS: "0x813C38214799535c1375606188aD7E8Fd1762651",

    NORO_ADDRESS: "0x8810dc193bA78b0dB831687EBB8d79f24a8b5E81",
    SNORO_ADDRESS: "0x6905C5AD100370f75f42305CbfbD7925E9720a59",

    TREASURY_ADDRESS: "0xE62bec7F3Dba623223cb3Bd23f901dA3fAC42893",

    STAKING_ADDRESS: "0x39F38285d3DE182faB1fb767C97dC24f7052adeC",
    STAKING_DISTRIBUTOR_ADDRESS: "0x01120bb9890e3F3A8f97a433554f7243Fa722541",
    STAKING_HELPER_ADDRESS: "0xa276eCf241346a98308aB980E52995c530B6f905",
    STAKING_WARMUP_ADDRESS: "0xc24AAa9F6bb31D64181b11F745b7e81924Cb9C40",

    BONDEPOSITORY_BEND: "",
    BONDEPOSITORY_AVAX: "",

    TIME_BONDING_CALC_ADDRESS: "0x62D16266fa36Ab4a5b7FDd7DCCC79EE0a5a8E165",
    WSNORO_ADDRESS: "0xcC822C19F8e0ed505F32580E42FA3e7DcF0F1013",

    BEND_ADDRESS: "0x3160591776e34C319F2Ad28Ba8c1F4829adc3907",
    WAVAX_ADDRESS: "0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7",
    ZAPIN_ADDRESS: "",
};

const AVAX_TESTNET = {
    DAO_ADDRESS: "0x8c8eC00fb235dE3922182b47d2E8f8e69268039a",

    NORO_ADDRESS: "0x6a6e9b63c5E33C1e55B35ca2050c869Dc26f833C",
    SNORO_ADDRESS: "0xAaF4a202F3A9a53Ad4366C40677C43FC3b29aE4C",

    TREASURY_ADDRESS: "0xf32811A17DB80A83359f0adDC252b4664768F182",

    STAKING_ADDRESS: "0x23853D8ADfC8BE96f449512a9dbE41CCE37794b1",
    STAKING_DISTRIBUTOR_ADDRESS: "0x383D8524edCd4f253cf87E0fC890ce8106388731",
    STAKING_HELPER_ADDRESS: "0xDEA80c2075Ad3C062853CE7DF7Cbb5fF1b84ca14",
    STAKING_WARMUP_ADDRESS: "0xDb0e1DED48148fcdaFE5eDc8aA217aDb9553b1F3",

    BONDEPOSITORY_BEND: "0x0E32f0c5406d01798525b18CDa97d52E4b27361E",
    BONDEPOSITORY_AVAX: "0x0E32f0c5406d01798525b18CDa97d52E4b27361E",

    TIME_BONDING_CALC_ADDRESS: "0x0E32f0c5406d01798525b18CDa97d52E4b27361E",
    WSNORO_ADDRESS: "0x0E32f0c5406d01798525b18CDa97d52E4b27361E",

    BEND_ADDRESS: "0x19a1165A79AFAAeFd805969B32a0640d4Db9f131",
    WAVAX_ADDRESS: "0xd00ae08403B9bbb9124bB305C09058E32C39A48c",
    ZAPIN_ADDRESS: "",
};

export const getAddresses = (networkID: number) => {
    if (networkID === Networks.AVAX_MAIN) return AVAX_MAINNET;
    if (networkID === Networks.AVAX_TEST) return AVAX_TESTNET;

    throw Error("Network don't support");
};
